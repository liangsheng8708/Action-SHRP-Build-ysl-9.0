name: SHRP_YSL_Build

on:
  workflow_dispatch:
    inputs:
      DeviceTree_Name:
        description: 'DeviceTree_Name'
        required: true
        default: 'ysl'
      DeviceTree_URL:
        description: 'DeviceTree_URL'
        required: true
        default: 'https://github.com/liangsheng8708/Device_xiaomi_ysl.git'
      Branches:
        description: 'Branches'
        required: true
        default: 'v3_9.0'
      DeviceTree_Path:
        description: 'DeviceTree_Path'
        required: true
        default: 'device/xiaomi/ysl'
      REPACK_NAME:
        description: 'REPACK_NAME'
        required: true
        default: ''





jobs:
  build:
    runs-on: ubuntu-18.04
    
    steps:
      - name: Check Out
        uses: actions/checkout@main
      - name: Prepare the environment
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
          sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo apt -y autoremove --purge
          sudo apt -y autoclean
          sudo apt clean
          sudo apt update
          sudo apt -y upgrade
          sudo apt -y install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip jq bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev imagemagick libbz2-dev libssl-dev lzma ncftp bash-completion python openjdk-8-jdk qemu-user-static
      - name: Install repo
        run: |
          mkdir -p ~/bin
          curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo > ~/bin/repo
          sudo cp ~/bin/repo /bin/repo
          sudo chmod a+x /bin/repo
      - name: Settings Github account...
        run: |
          git config --global user.name "liangsheng8708"
          git config --global user.email "1933153216@qq.com"
      - name: Download the Git...
        run: |
          mkdir shrp && cd shrp
          repo init --depth=1 -u https://github.com/SHRP/manifest.git -b ${{ github.event.inputs.Branches }}
          repo sync
      - name: Download Vendor Tree...
        run: |
          cd shrp
          rm -rf ./vendor/omni
          rm -rf ./vendor/qcom/opensource/commonsys
          git clone https://github.com/omnirom/android_vendor_omni.git -b android-9.0 ./vendor/omni
          git clone https://github.com/omnirom/android_vendor_qcom_opensource_commonsys.git -b android-9.0 ./vendor/qcom/opensource/commonsys
      - name: Download Device Tree...
        run: |
          cd shrp
          echo "<project path="${{ github.event.inputs.DeviceTree_Path }}" name="liangsheng8708/SHRP_device_xiaomi_vela" remote="github" revision="master" />" >> .repo/manifest.xml
          git clone ${{ github.event.inputs.DeviceTree_URL }} ${{ github.event.inputs.DeviceTree_Path }}
      - name: make recovery...
        run: |
          PATH=~/bin:$PATH
          cd shrp
          tree ./device
          export ALLOW_MISSING_DEPENDENCIES=true
          source build/envsetup.sh
          lunch omni_${{ github.event.inputs.DeviceTree_Name }}-eng 
          make clean
          make recoveryimage -j$(nproc --all)   
          ls -al ./out/target/product/${{ github.event.inputs.DeviceTree_Name }}/*.zip >> ${{ github.workspace }}/shrp/reconery_info.txt
      - name: Upload to Release...
        uses: ncipollo/release-action@v1.8.0
        with:
          artifacts: "${{ github.workspace }}/shrp/out/target/product/${{ github.event.inputs.DeviceTree_Name }}/*.zip"
          tag: "${{ github.event.inputs.REPACK_NAME }}_${{ env.BUILD_TIME }}"
          bodyFile: "${{ github.workspace }}/shrp/reconery_info.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
